@model IEnumerable<rorisangStudyGroup.Models.StudyGroupModel>
@{
    ViewBag.Title = "Study Group Members";
}

<h2>Study Group Members</h2>

<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
</p>

<!-- Search Functionality -->
<div class="form-inline mb-3">
    <input type="text" id="searchInput" class="form-control" placeholder="Search first names..." />
    <button type="button" id="searchBtn" class="btn btn-info">Search</button>
</div>

<!-- Local Storage Buttons -->
<div class="mb-3">
    <h4>With JSON (Recommended)</h4>
    <button type="button" id="saveToLocalJSON" class="btn btn-warning">Save to local storage (JSON)</button>
    <button type="button" id="retrieveFromLocalJSON" class="btn btn-success">Retrieve from local storage (JSON)</button>

    <h4 class="mt-3">Without JSON</h4>
    <button type="button" id="saveToLocalHTML" class="btn btn-warning">Save to local storage (HTML)</button>
    <button type="button" id="retrieveFromLocalHTML" class="btn btn-success">Retrieve from local storage (HTML)</button>

    <h4 class="mt-3">Clear Storage</h4>
    <button type="button" id="clearLocal" class="btn btn-danger">Clear local storage</button>
</div>

<table class="table table-bordered" id="studentsTable">
    <thead>
        <tr style="background-color: darkgreen; color: white;">
            <th width="20%">@Html.DisplayNameFor(model => model.StudentNr)</th>
            <th width="20%">@Html.DisplayNameFor(model => model.FirstName)</th>
            <th width="20%">@Html.DisplayNameFor(model => model.LastName)</th>
            <th width="20%">@Html.DisplayNameFor(model => model.Email)</th>
            <th width="20%">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.StudentNr)</td>
                <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                <td>
                    @Html.ActionLink("Delete", "Delete", new { studentNr = item.StudentNr },
                    new { @class = "btn btn-danger btn-sm", onclick = "return confirm('Are you sure you want to delete this student?');" })
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        // Search Functionality
        document.getElementById('searchBtn').addEventListener('click', function () {
            const searchString = document.getElementById('searchInput').value.toLowerCase();
            const rows = document.querySelectorAll('#studentsTable tbody tr');

            rows.forEach(row => {
                const firstName = row.cells[1].textContent.toLowerCase();
                if (firstName.includes(searchString)) {
                    // Store original color
                    if (!row.dataset.originalColor) {
                        row.dataset.originalColor = row.style.color || '';
                    }

                    // Change to red
                    row.style.color = 'red';

                    // Revert after 3 seconds
                    setTimeout(() => {
                        row.style.color = row.dataset.originalColor;
                    }, 3000);
                }
            });
        });

        // =====================
        // LOCAL STORAGE FUNCTIONS
        // =====================

        // METHOD 1: WITH JSON (Better approach)
        document.getElementById('saveToLocalJSON').addEventListener('click', function () {
            const tableData = [];

            // Get all rows data and create structured objects
            const rows = document.querySelectorAll('#studentsTable tbody tr');
            rows.forEach(row => {
                const rowData = {
                    studentNr: row.cells[0].textContent,
                    firstName: row.cells[1].textContent,
                    lastName: row.cells[2].textContent,
                    email: row.cells[3].textContent
                };
                tableData.push(rowData);
            });

            // Save to localStorage using JSON
            localStorage.setItem('studentsDataJSON', JSON.stringify(tableData));
            alert('Data saved to local storage using JSON!');
        });

        document.getElementById('retrieveFromLocalJSON').addEventListener('click', function () {
            const savedData = localStorage.getItem('studentsDataJSON');
            if (savedData) {
                const tableData = JSON.parse(savedData);
                const tbody = document.querySelector('#studentsTable tbody');

                // Clear current table
                tbody.innerHTML = '';

                // Rebuild table from JSON data
                tableData.forEach(student => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                            <td>${student.studentNr}</td>
                            <td>${student.firstName}</td>
                            <td>${student.lastName}</td>
                            <td>${student.email}</td>
                            <td>
                                <a href="/StudyGroup/Delete?studentNr=${student.studentNr}"
                                   class="btn btn-danger btn-sm"
                                   onclick="return confirm('Are you sure you want to delete this student?');">
                                    Delete
                                </a>
                            </td>
                        `;
                    tbody.appendChild(row);
                });
                alert('Data retrieved from local storage using JSON!');
            } else {
                alert('No JSON data found in local storage!');
            }
        });

        // METHOD 2: WITHOUT JSON (Saving raw HTML)
        document.getElementById('saveToLocalHTML').addEventListener('click', function () {
            const tbody = document.querySelector('#studentsTable tbody');

            // Save the raw HTML content without JSON
            localStorage.setItem('studentsDataHTML', tbody.innerHTML);
            alert('Data saved to local storage without JSON (raw HTML)!');
        });

        document.getElementById('retrieveFromLocalHTML').addEventListener('click', function () {
            const savedData = localStorage.getItem('studentsDataHTML');
            if (savedData) {
                const tbody = document.querySelector('#studentsTable tbody');

                // Simply restore the raw HTML
                tbody.innerHTML = savedData;
                alert('Data retrieved from local storage without JSON!');

                // Reattach event listeners to new delete buttons if needed
                reattachDeleteListeners();
            } else {
                alert('No HTML data found in local storage!');
            }
        });

        // Clear local storage
        document.getElementById('clearLocal').addEventListener('click', function () {
            // Clear both JSON and HTML versions
            localStorage.removeItem('studentsDataJSON');
            localStorage.removeItem('studentsDataHTML');
            alert('Local storage cleared! Both JSON and HTML data removed.');
        });

        // Helper function to reattach delete listeners (for HTML method)
        function reattachDeleteListeners() {
            const deleteLinks = document.querySelectorAll('#studentsTable tbody a.btn-danger');
            deleteLinks.forEach(link => {
                link.onclick = function () {
                    return confirm('Are you sure you want to delete this student?');
                };
            });
        }
    </script>
}